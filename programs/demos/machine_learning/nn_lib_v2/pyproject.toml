[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "pmflow-bnn"
version = "0.2.0"
description = "PMFlow Biological Neural Networks with Temporal Parallelism - Enhanced implementation of gravitational flow dynamics for neural computation"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "PMFlow Development Team", email = "contact@pmflow.dev"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Physics",
]
keywords = ["neural-networks", "biological-networks", "gravitational-dynamics", "temporal-parallelism", "pushing-medium"]
requires-python = ">=3.8"
dependencies = [
    "torch>=1.12.0",
    "numpy>=1.21.0",
    "typing-extensions>=4.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=3.0",
    "black>=22.0",
    "isort>=5.0",
    "flake8>=4.0",
    "mypy>=0.950",
]
benchmark = [
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "pandas>=1.4.0",
    "jupyter>=1.0.0",
    "tqdm>=4.60.0",
]
cuda = [
    "torch[cuda]>=1.12.0",
]

[project.urls]
Homepage = "https://github.com/experimentech/pushing-medium"
Documentation = "https://pushing-medium.readthedocs.io"
Repository = "https://github.com/experimentech/pushing-medium"
"Bug Tracker" = "https://github.com/experimentech/pushing-medium/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["pmflow_bnn*"]

[tool.setuptools.package-data]
pmflow_bnn = ["*.txt", "*.md"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=pmflow_bnn",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "gpu: marks tests that require GPU",
]